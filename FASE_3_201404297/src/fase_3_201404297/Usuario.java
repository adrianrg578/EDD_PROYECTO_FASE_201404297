/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package fase_3_201404297;

import java.awt.FlowLayout;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.time.LocalDateTime;
import javax.swing.DefaultComboBoxModel;
import java.security.MessageDigest;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.security.NoSuchAlgorithmException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

/**
 *
 * @author adria
 */
public class Usuario extends javax.swing.JFrame {
    NodoB actual;
    TablaHash listado_mensajeros = new TablaHash();
    Grafo listado_lugares = new Grafo();
    Blockchain libro_envios;
    Arbol_Merkle operaciones = new Arbol_Merkle();
    String id_merkle;
    DefaultComboBoxModel modelo_lugar_ini = new DefaultComboBoxModel();
    DefaultComboBoxModel modelo_lugar_fin = new DefaultComboBoxModel();
    DefaultComboBoxModel modelo_mensajero = new DefaultComboBoxModel();
    
    Date fecha;
    String direccion_destino;
    String direccion_sucursal;
    String cliente;
    String mensajero;
    DateFormat dateFormat = new SimpleDateFormat("DD-MM-YY-::HH:MM:SS");
    String fecha_st;
    int nonce;
    
    /**
     * Creates new form Usuario
     */
    public Usuario(NodoB activo,TablaHash mensajeros,Grafo lugares,int ceros) {
        initComponents();
        this.actual=activo;
        jlabel_activo.setText("Usuario Activo: "+actual.user);
        this.listado_mensajeros = mensajeros;
        this.listado_lugares=lugares;
        this.libro_envios = new Blockchain(ceros);
        this.id_merkle = "";
        this.fecha=null;
        this.direccion_destino ="";
        this.direccion_sucursal ="";
        this.cliente="";
        this.mensajero="";
        this.fecha_st = "";
        this.nonce =0;
        llenar_mesajero();
        llenar_lugar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox_imagen = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox_lugar_inicial = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBox_lugar_final = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboBox_mensajero = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_consola = new javax.swing.JTextArea();
        jlabel_activo = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu_cerrar_sesion = new javax.swing.JMenuItem();
        jMenu_inicio_sesion = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu_cargar_imagenes = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox_imagen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_imagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_imagenActionPerformed(evt);
            }
        });

        jLabel1.setText("Imagen a enviar");

        jLabel2.setText("Lugar Inicial");

        jComboBox_lugar_inicial.setModel(modelo_lugar_ini);

        jLabel3.setText("Lugar Final");

        jComboBox_lugar_final.setModel(modelo_lugar_fin);

        jLabel4.setText("Mensajero");

        jComboBox_mensajero.setModel(modelo_mensajero);

        jButton1.setText("Realizar Envio");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Consola");

        jTextArea_consola.setColumns(20);
        jTextArea_consola.setRows(5);
        jScrollPane1.setViewportView(jTextArea_consola);

        jButton2.setText("Prueba de Trabajo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu1.setText("Archivo");

        jMenu_cerrar_sesion.setText("Cerrar Sesion");
        jMenu1.add(jMenu_cerrar_sesion);

        jMenu_inicio_sesion.setText("Inicio Sesion");
        jMenu1.add(jMenu_inicio_sesion);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Cargar");

        jMenu_cargar_imagenes.setText("Imagenes");
        jMenu2.add(jMenu_cargar_imagenes);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jComboBox_imagen, 0, 100, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox_lugar_inicial, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox_lugar_final, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox_mensajero, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(jButton2))))
                    .addComponent(jButton1)
                    .addComponent(jlabel_activo))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlabel_activo)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jComboBox_imagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jComboBox_lugar_inicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jComboBox_lugar_final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jComboBox_mensajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2))
                .addGap(8, 8, 8)
                .addComponent(jButton1)
                .addGap(76, 76, 76))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_imagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_imagenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_imagenActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String imagen = (String) jComboBox_imagen.getSelectedItem();
        String imagen_edit = imagen.replace(" ","_");
        Nodo_ady lugar_i = listado_lugares.buscar((int)jComboBox_lugar_inicial.getSelectedItem());
        direccion_sucursal = lugar_i.departamento+","+lugar_i.nombre;
        fecha = new Date();
        fecha_st =dateFormat.format(fecha);
        Nodo_ady lugar_f = listado_lugares.buscar((int)jComboBox_lugar_final.getSelectedItem());
        direccion_destino = lugar_f.departamento+","+ lugar_f.nombre;
        String cliente_edit =actual.nombre;
        cliente = cliente_edit.replace(" ", "_");
        NodoHash mens = listado_mensajeros.buscar((Long)jComboBox_mensajero.getSelectedItem());
        mensajero = mens.nombre+"_"+mens.apellido;
        String ruta_optima ="";
 
        String cadena_a_cifrar ="";
        cadena_a_cifrar +=direccion_sucursal+fecha+direccion_destino+cliente+mensajero+ruta_optima;
        String cadena_edit = cadena_a_cifrar.replace(" ","_");
        System.out.println(cadena_edit);
        id_merkle = encriptar(cadena_edit);
        operaciones.agregar(id_merkle,direccion_sucursal,direccion_destino,fecha_st,cliente, mensajero);
        
        System.out.println(id_merkle);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //Nodo_Merkle aux = operaciones.buscar(id_merkle);
        String prev = "";
        int indice = 0;
        int ceros = libro_envios.get_ceros();
        if(libro_envios.tamanio<1){
            prev ="0000";
            indice = 0;
        }else{
            prev = libro_envios.ultimo.hash;
            indice = libro_envios.tamanio;
        }
        String trabajo = "";
        try {
            trabajo = prueba_trabajo(indice,fecha_st,prev,id_merkle,ceros);
            
            String merkle_root = operaciones.hash_root();
            NodoBlock actual = libro_envios.insertar(fecha_st,nonce,operaciones,prev,merkle_root,trabajo);
            libro_envios.guardar_json(actual);
            operaciones.imprimir();
            String dir_arbol =operaciones.imagen_Merkle("arbol_");
            imagen_externo(dir_arbol);
            operaciones.reiniciar_arbol();
            
        } catch (NoSuchAlgorithmException ex) {
            System.out.println("trono la prueba de trabajo");
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usuario(null,null,null,4).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox_imagen;
    private javax.swing.JComboBox<String> jComboBox_lugar_final;
    private javax.swing.JComboBox<String> jComboBox_lugar_inicial;
    private javax.swing.JComboBox<String> jComboBox_mensajero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenu_cargar_imagenes;
    private javax.swing.JMenuItem jMenu_cerrar_sesion;
    private javax.swing.JMenuItem jMenu_inicio_sesion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea_consola;
    private javax.swing.JLabel jlabel_activo;
    // End of variables declaration//GEN-END:variables

    private void llenar_mesajero(){
        NodoHash[] aux = listado_mensajeros.tabla_hash;
        for(int i = 0; i<aux.length;i++){
            if(aux[i]!=null){
                //System.out.println("indice: "+ i +"  DPI: "+aux[i].dpi);
                modelo_mensajero.addElement(aux[i].dpi);
            }else{
                //System.out.println("indice: "+ i +"DPI: vacio" );
            }
        }
    }
    
    private void llenar_lugar(){
        Nodo_ady aux = listado_lugares.primero;
        while(aux!=null){
            //System.out.println("id: "+aux.id+"  nombre: "+aux.nombre);
            modelo_lugar_ini.addElement(aux.id);
            modelo_lugar_fin.addElement(aux.id);
            aux = aux.abajo;
        }
    }
    
    public byte[] getSHA(String input)throws NoSuchAlgorithmException{
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        return md.digest(input.getBytes(StandardCharsets.UTF_8));
    }
    
    public String toHexString(byte[] hash){
        BigInteger number = new BigInteger(1,hash);
        StringBuilder hexString = new StringBuilder(number.toString(16));
        while (hexString.length()<64){
            hexString.insert(0,'0');
        }
        return hexString.toString();
    }
    
    public String encriptar(String cadena){
        String result = "";
        try{
            result = toHexString(getSHA(cadena));
        }catch(NoSuchAlgorithmException e){
            System.out.println("NO se pudo crear el cifrado");
        }
        return result;
    }
    
    public String prueba_trabajo(int index,String time,String previo,
            String id_merkle,int ceros) throws NoSuchAlgorithmException{
        nonce=0;
        String result = "";
        boolean valido = true;
        char comparador = '0';
        int contador =0;
        String hash = index+time+previo+id_merkle;
        String hash_fix = hash.replace(" ","");
        String hashed_text = toHexString(getSHA(hash_fix+nonce));
        while(valido){
            contador = 0;
            for(int i =0;i<ceros;i++){
                if(Character.compare(comparador,hashed_text.charAt(i))==0){
                    contador++;
                    System.out.println("encontro un cero");
                }
                if(contador==ceros){
                    valido = false;
                    break;
                }
            }
            if(valido){
            nonce++;
            System.out.println(nonce);
            hashed_text = toHexString(getSHA(hash_fix+nonce));
            }
        }
        
        result = hashed_text;
        return result;
    }
    
    public void imagen_externo(String urlimg){
        try{
            File file = new File(urlimg);
            BufferedImage bufferedImage = ImageIO.read(file);
            ImageIcon imageIcon = new ImageIcon(bufferedImage);
            JFrame jframe = new JFrame();
            jframe.setLayout(new FlowLayout());
            jframe.setSize(600, 800);
            JLabel jlabel = new JLabel();
            
            jlabel.setIcon(imageIcon);
            jframe.add(jlabel);
            jframe.setVisible(true);
            jframe.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        } catch (IOException ex) {
            System.out.println("Ocurrio un error inesperado no se mostro la imagen");

        }
    
    }
}
