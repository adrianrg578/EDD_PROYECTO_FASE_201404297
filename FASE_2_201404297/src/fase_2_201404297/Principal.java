/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package fase_2_201404297;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author adria
 */
public class Principal extends javax.swing.JFrame {
    ArbolABB arbol_capas = new ArbolABB();
    DefaultListModel modelo_capa = new DefaultListModel();
    ArbolAVL arbol_imagenes = new ArbolAVL();
    DefaultListModel modelo_img = new DefaultListModel();
    DefaultListModel modelo_album = new DefaultListModel();
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_consola = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jm_inicio = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("UDrawing Paper");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Capas cargadas");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Imagen de la capa seleccionada");

        jt_consola.setEditable(false);
        jt_consola.setColumns(20);
        jt_consola.setRows(5);
        jScrollPane1.setViewportView(jt_consola);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Consola");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Mostrar capa");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jList1.setModel(modelo_capa);
        jList1.setToolTipText("");
        jScrollPane2.setViewportView(jList1);

        jPanel1.setFocusable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Imagenes Cargadas");

        jList2.setModel(null);
        jScrollPane3.setViewportView(jList2);

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("Mostrar Imagen");

        jList3.setModel(null);
        jScrollPane4.setViewportView(jList3);

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton3.setText("Mostrar Album");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Albumes Cargados");

        jm_inicio.setText("Inicio");

        jMenuItem1.setText("Cerrar Sesion");
        jm_inicio.add(jMenuItem1);

        jMenuItem2.setText("Iniciar Sesion");
        jm_inicio.add(jMenuItem2);

        jMenuBar1.add(jm_inicio);

        jMenu3.setText("Archivo");

        jMenuItem3.setText("Cargar Capas");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("Cargar Imagenes");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setText("Cargar Albumes");
        jMenu3.add(jMenuItem5);

        jMenuBar1.add(jMenu3);

        jMenu1.setText("Ver");

        jMenuItem7.setText("Ver Arbol Capas");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItem8.setText("Ver Arbol Imagenes");
        jMenu1.add(jMenuItem8);

        jMenuItem6.setText("Ver Listado Albumes");
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu4.setText("Reportes");
        jMenuBar1.add(jMenu4);

        jMenu2.setText("Mas");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jButton1)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)))
                        .addGap(36, 36, 36)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(43, 43, 43)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        JFileChooser selector = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos JSON", "json");
        selector.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        selector.setFileFilter(filtro);
        int result = selector.showOpenDialog(this);
        File archivo = selector.getSelectedFile();
        if ((archivo==null) || (archivo.getName().equals(""))){
            JOptionPane.showMessageDialog(this, "Nombre de archivo invalido",
                    "Nombre de archivo invalido",JOptionPane.ERROR_MESSAGE);   
        }
        leerjson_capa(archivo.getAbsolutePath());
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Object sel =(Object) jList1.getSelectedValue();
        if(arbol_capas.raiz!=null){
            System.out.println(arbol_capas.txt_te());
        }
        if(sel != null){
            String aux = String.valueOf(sel);
            int aux2 = Integer.parseInt(aux);
            Matriz capa_sel = arbol_capas.buscar(aux2);
            if(capa_sel == null){
                jt_consola.append("La capa buscada no existe o no se encontro.\n");
            }else{
                String d_imagen;
                d_imagen = capa_sel.imagen();
                if(d_imagen.length() > 0){
                    jt_consola.append(String.valueOf(aux2)+"\n");
                    BufferedImage bimg;
                    try{
                        bimg = ImageIO.read(new File(d_imagen));
                        int ancho = bimg.getWidth();
                        int alto = bimg.getHeight();
                        Image image = new ImageIcon(d_imagen).getImage();
                        ImageIcon icon = new ImageIcon(image.getScaledInstance(ancho, alto, Image.SCALE_SMOOTH));
                        JLabel etiqueta = new JLabel(icon);
                        JScrollPane scp = new JScrollPane(etiqueta);
                        jPanel1.add(scp);
                        scp.setBounds(0,0,430,535);
                        scp.setViewportView(etiqueta);
                        scp.repaint();
                    } catch(Exception ex){
                        System.out.println("NO se logro motrar la imagen");
                    }
                }else{
                    jt_consola.append("Ocurrio un error, no hay direccion de imagen");
                }
            }          
        }else{
            JOptionPane.showMessageDialog(this, "SELECCIONE UNA CAPA A MOSTRAR",
                    "ERROR",JOptionPane.ERROR_MESSAGE);   
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        JFileChooser selector = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos JSON", "json");
        selector.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        selector.setFileFilter(filtro);
        int result = selector.showOpenDialog(this);
        File archivo = selector.getSelectedFile();
        if ((archivo==null) || (archivo.getName().equals(""))){
            JOptionPane.showMessageDialog(this, "Nombre de archivo invalido",
                    "Nombre de archivo invalido",JOptionPane.ERROR_MESSAGE);   
        }
        leerjson_img(archivo.getAbsolutePath());
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JMenu jm_inicio;
    private javax.swing.JTextArea jt_consola;
    // End of variables declaration//GEN-END:variables

    //metodos externos
    public void leerjson_capa(String direccion){
        JSONParser parser = new JSONParser();
        //prueba de la creacion de una matriz borrar despues
        //ArrayList<Matriz> matrices = new ArrayList<>();

        
        try(Reader reader = new FileReader(direccion)){
            JSONArray arrayobj = (JSONArray) parser.parse(reader);
            //System.out.println(arrayobj);
            
            if(arrayobj.size()>0){
               for(int n = 0; n <arrayobj.size(); n++){
                   JSONObject valor = (JSONObject) arrayobj.get(n);
                   long capa =  (Long) valor.get("id_capa");
                   JSONArray valor_pixel = (JSONArray) valor.get("pixeles");
                   Matriz matriz = new Matriz((int)capa);

                   for(int i = 0; i <valor_pixel.size();i++){
                       JSONObject valor_interno_pixel = (JSONObject) valor_pixel.get(i);
                       long columna =(Long) valor_interno_pixel.get("columna");
                       long fila = (Long) valor_interno_pixel.get("fila");
                       String color = (String) valor_interno_pixel.get("color");
                       matriz.insertar_nodo((int)columna,(int) fila, color);
                   }
                  // matrices.add(matriz);
                   arbol_capas.insertar(matriz);
                   modelo_capa.addElement(matriz.id);
               }
            }   
        } catch (IOException e) {
            System.out.println("EL ARCHIVO NO SE PUEDE ABRIR, O NO EXISTE");
            jt_consola.append("EL ARCHIVO NO SE PUEDE ABRIR, NO EXISTE \n");
        } catch (org.json.simple.parser.ParseException ex) {
            System.out.println("EL ARCHIVO NO ES UN ARCHIVO JSON");
            jt_consola.append("EL ARCHIVO NO ES UN ARCHIVO JSON \n");

        }
        
        //lista.setModel(modelo_capa);
    }
    
    public void leerjson_img(String direccion){
        JSONParser parser = new JSONParser();
        
        try(Reader reader = new FileReader(direccion)){
            JSONArray arrayobj = (JSONArray) parser.parse(reader);
            System.out.println(arrayobj);
        }catch (IOException e){
            System.out.println("EL ARCHIVO NO SE PUEDE ABRIR, O NO EXISTE");
            jt_consola.append("EL ARCHIVO NO SE PUEDE ABRIR, NO EXISTE \n");
        } catch (org.json.simple.parser.ParseException ex) {
            System.out.println("EL ARCHIVO NO ES UN ARCHIVO JSON");
            jt_consola.append("EL ARCHIVO NO ES UN ARCHIVO JSON \n");
        }
    }
}
